theory slanted_permission
  imports contact_algebra

begin

declare[[show_types=false]] (*switch this on/off to see the actual types (useful to debug polymorphism problems)*)

(*Slanted operators*)
definition precon_diamond::" ('w \<sigma>,'w \<sigma>)\<rho> \<Rightarrow> 'w \<sigma>  \<Rightarrow> 'w \<sigma>" (infixr "\<^bold>\<rhd>" 51) 
  where " \<rho> \<^bold>\<rhd> a  \<equiv> \<^bold>\<Or> (\<lambda>x.\<not> (\<rho> a x)) "  
definition precon_con::" ('w \<sigma>,'w \<sigma>)\<rho> \<Rightarrow> 'w \<sigma>  \<Rightarrow> 'w \<sigma>" (infixr "\<^bold>\<unrhd>" 51) 
  where " \<rho> \<^bold>\<unrhd> a  \<equiv> \<^bold>\<Or> (\<lambda>x.\<not> (\<rho> x a))" 



(* bi-subordination algebra*)
lemma ainclubi1: " (subordination \<rho> \<and> subordination \<sigma> \<and> (\<forall> x y. \<rho> x y \<longrightarrow> \<sigma> x y ) ) \<longrightarrow>  (\<forall>a.  \<sigma> \<^bold>\<diamond> a \<^bold>\<preceq>  \<rho> \<^bold>\<diamond> a)"  
  by (simp add: inf_char slanted_diamond_def)
  

lemma subtomat: "  subordination \<rho> \<and> subordination \<sigma> \<and> (\<forall> x y z .  (\<sigma> x z \<and> \<rho> z y )  \<longrightarrow>  x \<^bold>\<preceq> y  ) \<longrightarrow>   (\<forall> a.  \<rho> \<^bold>\<box> a \<^bold>\<preceq> \<sigma> \<^bold>\<diamond> a) "   oops

lemma subconth1: " (subordination \<rho> \<and> precontact \<sigma>) \<longrightarrow> ( (\<forall> x y. \<rho> x y \<longrightarrow> \<sigma> x y) \<longrightarrow>  (\<forall> a. \<not> ( \<rho> \<^bold>\<diamond> a \<^bold>\<preceq> \<sigma> \<^bold>\<rhd> a))   ) " unfolding subordination_def  
  by (metis Bot_con_def SI_def Top_def bottom_def precontact subset_def)

lemma subconth2: " (subordination \<rho> \<and> precontact \<sigma>) \<longrightarrow> ( (\<forall> x y. \<sigma> x y \<longrightarrow> \<rho> x y) \<longrightarrow> (\<forall> x y.\<not> (y \<^bold>\<preceq>  \<sigma> \<^bold>\<rhd> x) \<longrightarrow> (\<rho> \<^bold>\<diamond> x \<^bold>\<preceq> y ))  ) " 
  unfolding subordination_def and precontact inf_char precon_diamond_def slanted_diamond_def sup_char by (metis inf_char sup_char)

lemma subconth3: " (subordination \<rho> \<and> precontact \<sigma>) \<longrightarrow> ( (\<forall> x y. \<rho> x y \<longrightarrow> \<not> (\<sigma> x (\<^bold>\<midarrow>y))) \<longrightarrow> (\<forall>a. (\<^bold>\<midarrow>(\<sigma> \<^bold>\<rhd> a)) \<^bold>\<preceq>  \<rho> \<^bold>\<diamond> a  )  ) " 
unfolding subordination_def and precontact inf_char precon_diamond_def slanted_diamond_def sup_char 
  by (metis dom_compl_def iDM_b inf_char setequ_equ)

lemma subconth4: " (subordination \<rho> \<and> precontact \<sigma>) \<longrightarrow> ( (\<forall> x y. \<not> (\<sigma> x (\<^bold>\<midarrow>y)) \<longrightarrow> \<rho> x y ) \<longrightarrow> (\<forall>a.  \<rho> \<^bold>\<diamond> a  \<^bold>\<preceq>  (\<^bold>\<midarrow>(\<sigma> \<^bold>\<rhd> a))  )  ) " 
  unfolding subordination_def and precontact inf_char precon_diamond_def slanted_diamond_def sup_char 
  by (smt (verit) dom_compl_def iDM_b infimum_def setequ_equ subset_def)

lemma subconth5: " (subordination \<rho> \<and> precontact \<sigma>) \<longrightarrow> ( (\<forall> x y. \<sigma> x y \<longrightarrow> \<not> (\<rho> x (\<^bold>\<midarrow>y))) \<longrightarrow> (\<forall>a. (\<^bold>\<midarrow>(\<rho> \<^bold>\<diamond> a)) \<^bold>\<preceq>   \<sigma> \<^bold>\<rhd> a ) ) " 
unfolding subordination_def and precontact inf_char precon_diamond_def slanted_diamond_def sup_char 
  by (metis dom_compl_def iDM_a setequ_equ sup_char)

lemma subconth6: " (subordination \<rho> \<and> precontact \<sigma>) \<longrightarrow> ( (\<forall> x y. \<not> (\<rho> x (\<^bold>\<midarrow>y)) \<longrightarrow> \<sigma> x y )\<longrightarrow> (\<forall>a.   \<sigma> \<^bold>\<rhd> a  \<^bold>\<preceq>  (\<^bold>\<midarrow>(\<rho> \<^bold>\<diamond> a)) )  ) " 
  unfolding subordination_def and precontact inf_char precon_diamond_def slanted_diamond_def sup_char 
  by (metis dom_compl_def iDM_a setequ_equ sup_char)

lemma subconth6a: " (subordination \<rho> \<and> precontact \<sigma>) \<longrightarrow> (  (\<forall>a.   \<sigma> \<^bold>\<rhd> a  \<^bold>\<preceq>  (\<^bold>\<midarrow>(\<rho> \<^bold>\<diamond> a)) ) \<longrightarrow>  (\<forall> x y. \<not> (\<rho> x (\<^bold>\<midarrow>y)) \<longrightarrow> \<sigma> x y ) ) " 
    unfolding precon_diamond_def    oops


lemma thsubancon1: " (subordination \<rho> \<and> precontact \<sigma>) \<longrightarrow> ( (\<forall> a c.  (\<exists> b. \<rho> a b \<and> \<sigma> b c  ) \<longrightarrow> \<sigma> a c ) \<longrightarrow> (\<forall>a. \<rho> \<^bold>\<box> (\<sigma> \<^bold>\<rhd> a)  \<^bold>\<preceq>  (\<sigma> \<^bold>\<rhd> a) )  ) " 
  unfolding subordination_def and precontact 
  by (smt (verit, best) Bot_con_def Bot_def WO_def bottom_def precon_diamond_def subset_def supremum_def top_def)
(* 
proof -
  have "\<forall>p pa. p \<^bold>\<rhd> (pa::'a \<Rightarrow> bool) = \<^bold>\<Or>epred1_3 p pa"
    by (metis precon_diamond_def) (* > 1.0 s, timed out *)
  then have f1: "\<forall>p pa pb. p \<^bold>\<rhd> (pa::'a \<Rightarrow> bool) \<^bold>\<succeq> pb \<or> p pa pb"
    by (metis sup_char) (* failed *)
  then have "\<forall>p pa. p (pa::'a \<Rightarrow> bool) (epred10_2 ((\<^bold>\<preceq>)::('a \<Rightarrow> bool) \<Rightarrow> (_ \<Rightarrow> bool) \<Rightarrow> bool) (p \<^bold>\<rhd> pa)) \<or> \<not> SB_con ((\<^bold>\<preceq>)::('a \<Rightarrow> bool) \<Rightarrow> (_ \<Rightarrow> bool) \<Rightarrow> bool)"
    by (metis SB_con_def) (* failed *)
  then have "\<not> SB_con ((\<^bold>\<preceq>)::('a \<Rightarrow> bool) \<Rightarrow> (_ \<Rightarrow> bool) \<Rightarrow> bool)"
    by metis (* failed *)
  then have "((SI \<rho> \<and> WO \<rho> \<and> AND \<rho> \<and> OR \<rho> \<and> Bot \<rho> \<and> Top \<rho> \<and> SF \<rho> \<and> SB \<rho>) \<and> AND_con \<sigma> \<and> OR_con \<sigma> \<and> SI_con \<sigma> \<and> WO_con \<sigma> \<and> Bot_con \<sigma> \<and> Top_con \<sigma> \<and> SF_con \<sigma> \<and> SB_con \<sigma> \<longrightarrow> (\<forall>p. (\<lambda>pa. nonEmpty (\<lambda>pb. \<rho> p pb \<and> \<sigma> pb pa)) \<sqsubseteq> \<sigma> p) \<longrightarrow> (\<forall>p. \<sigma> \<^bold>\<rhd> p \<^bold>\<succeq> \<rho> \<^bold>\<box> \<sigma> \<^bold>\<rhd> p)) \<or> nonEmpty (\<lambda>p. \<not> \<sigma> p (\<rho> \<^bold>\<box> \<sigma> \<^bold>\<rhd> epred12_0) \<and> \<not> SB_con ((\<^bold>\<preceq>)::('a \<Rightarrow> bool) \<Rightarrow> (_ \<Rightarrow> bool) \<Rightarrow> bool))"
    by (metis SB_con_def)
  moreover
  { assume "nonEmpty (\<lambda>p. \<not> \<sigma> p (\<rho> \<^bold>\<box> \<sigma> \<^bold>\<rhd> epred12_0) \<and> \<not> SB_con ((\<^bold>\<preceq>)::('a \<Rightarrow> bool) \<Rightarrow> (_ \<Rightarrow> bool) \<Rightarrow> bool))"
    then have "\<not> \<sigma> (epred11_1 ((\<^bold>\<preceq>)::('a \<Rightarrow> bool) \<Rightarrow> (_ \<Rightarrow> bool) \<Rightarrow> bool)) (\<rho> \<^bold>\<box> \<sigma> \<^bold>\<rhd> epred12_0) \<and> \<not> SB_con ((\<^bold>\<preceq>)::('a \<Rightarrow> bool) \<Rightarrow> (_ \<Rightarrow> bool) \<Rightarrow> bool) \<or> nonEmpty (\<lambda>p. nonEmpty (\<lambda>pa. (\<not> SB_con ((\<^bold>\<preceq>)::('a \<Rightarrow> bool) \<Rightarrow> (_ \<Rightarrow> bool) \<Rightarrow> bool) \<and> \<not> \<sigma> p pa) \<and> \<sigma> (epred11_1 (\<^bold>\<preceq>)) pa))"
      by metis
    moreover
    { assume "nonEmpty (\<lambda>p. nonEmpty (\<lambda>pa. (\<not> SB_con ((\<^bold>\<preceq>)::('a \<Rightarrow> bool) \<Rightarrow> (_ \<Rightarrow> bool) \<Rightarrow> bool) \<and> \<not> \<sigma> p pa) \<and> \<sigma> (epred11_1 (\<^bold>\<preceq>)) pa))"
      then have "((SI \<rho> \<and> WO \<rho> \<and> AND \<rho> \<and> OR \<rho> \<and> Bot \<rho> \<and> Top \<rho> \<and> SF \<rho> \<and> SB \<rho>) \<and> AND_con \<sigma> \<and> OR_con \<sigma> \<and> SI_con \<sigma> \<and> WO_con \<sigma> \<and> Bot_con \<sigma> \<and> Top_con \<sigma> \<and> SF_con \<sigma> \<and> SB_con \<sigma> \<longrightarrow> (\<forall>p. (\<lambda>pa. nonEmpty (\<lambda>pb. \<rho> p pb \<and> \<sigma> pb pa)) \<sqsubseteq> \<sigma> p) \<longrightarrow> (\<forall>p. \<sigma> \<^bold>\<rhd> p \<^bold>\<succeq> \<rho> \<^bold>\<box> \<sigma> \<^bold>\<rhd> p)) \<or> nonEmpty (\<lambda>p. \<not> \<rho> p (epred11_1 (\<^bold>\<preceq>)) \<and> \<not> SB_con ((\<^bold>\<preceq>)::('a \<Rightarrow> bool) \<Rightarrow> (_ \<Rightarrow> bool) \<Rightarrow> bool))"
        by metis
      moreover
      { assume "nonEmpty (\<lambda>p. \<not> \<rho> p (epred11_1 (\<^bold>\<preceq>)) \<and> \<not> SB_con ((\<^bold>\<preceq>)::('a \<Rightarrow> bool) \<Rightarrow> (_ \<Rightarrow> bool) \<Rightarrow> bool))"
        then have "nonEmpty (\<lambda>p. nonEmpty (\<lambda>pa. \<not> \<rho> p pa \<and> pa \<^bold>\<succeq> epred8_2 \<rho> p))"
          by (metis SB_con_def) (* failed *)
        then have "nonEmpty (\<lambda>p. \<not> upwards_closed (\<rho> p)) \<or> nonEmpty (\<lambda>p. \<not> \<rho> p (epred8_2 \<rho> p))"
          by (metis upwards_closed_def)
        moreover
        { assume "nonEmpty (\<lambda>p. \<not> \<rho> p (epred8_2 \<rho> p))"
          then have "(SI \<rho> \<and> WO \<rho> \<and> AND \<rho> \<and> OR \<rho> \<and> Bot \<rho> \<and> Top \<rho> \<and> SF \<rho> \<and> SB \<rho>) \<and> AND_con \<sigma> \<and> OR_con \<sigma> \<and> SI_con \<sigma> \<and> WO_con \<sigma> \<and> Bot_con \<sigma> \<and> Top_con \<sigma> \<and> SF_con \<sigma> \<and> SB_con \<sigma> \<longrightarrow> (\<forall>p. (\<lambda>pa. nonEmpty (\<lambda>pb. \<rho> p pb \<and> \<sigma> pb pa)) \<sqsubseteq> \<sigma> p) \<longrightarrow> (\<forall>p. \<sigma> \<^bold>\<rhd> p \<^bold>\<succeq> \<rho> \<^bold>\<box> \<sigma> \<^bold>\<rhd> p)"
            by (metis SF_def) (* > 1.0 s, timed out *) }
        moreover
        { assume "nonEmpty (\<lambda>p. \<not> upwards_closed (\<rho> p))"
          then have "\<not> subordination \<rho>"
            by (metis filter_boolean_def imag_filter)
          then have "(SI \<rho> \<and> WO \<rho> \<and> AND \<rho> \<and> OR \<rho> \<and> Bot \<rho> \<and> Top \<rho> \<and> SF \<rho> \<and> SB \<rho>) \<and> AND_con \<sigma> \<and> OR_con \<sigma> \<and> SI_con \<sigma> \<and> WO_con \<sigma> \<and> Bot_con \<sigma> \<and> Top_con \<sigma> \<and> SF_con \<sigma> \<and> SB_con \<sigma> \<longrightarrow> (\<forall>p. (\<lambda>pa. nonEmpty (\<lambda>pb. \<rho> p pb \<and> \<sigma> pb pa)) \<sqsubseteq> \<sigma> p) \<longrightarrow> (\<forall>p. \<sigma> \<^bold>\<rhd> p \<^bold>\<succeq> \<rho> \<^bold>\<box> \<sigma> \<^bold>\<rhd> p)"
            by (metis subordination_def) }
        ultimately have "(SI \<rho> \<and> WO \<rho> \<and> AND \<rho> \<and> OR \<rho> \<and> Bot \<rho> \<and> Top \<rho> \<and> SF \<rho> \<and> SB \<rho>) \<and> AND_con \<sigma> \<and> OR_con \<sigma> \<and> SI_con \<sigma> \<and> WO_con \<sigma> \<and> Bot_con \<sigma> \<and> Top_con \<sigma> \<and> SF_con \<sigma> \<and> SB_con \<sigma> \<longrightarrow> (\<forall>p. (\<lambda>pa. nonEmpty (\<lambda>pb. \<rho> p pb \<and> \<sigma> pb pa)) \<sqsubseteq> \<sigma> p) \<longrightarrow> (\<forall>p. \<sigma> \<^bold>\<rhd> p \<^bold>\<succeq> \<rho> \<^bold>\<box> \<sigma> \<^bold>\<rhd> p)"
          by metis (* > 1.0 s, timed out *) }
      ultimately have "(SI \<rho> \<and> WO \<rho> \<and> AND \<rho> \<and> OR \<rho> \<and> Bot \<rho> \<and> Top \<rho> \<and> SF \<rho> \<and> SB \<rho>) \<and> AND_con \<sigma> \<and> OR_con \<sigma> \<and> SI_con \<sigma> \<and> WO_con \<sigma> \<and> Bot_con \<sigma> \<and> Top_con \<sigma> \<and> SF_con \<sigma> \<and> SB_con \<sigma> \<longrightarrow> (\<forall>p. (\<lambda>pa. nonEmpty (\<lambda>pb. \<rho> p pb \<and> \<sigma> pb pa)) \<sqsubseteq> \<sigma> p) \<longrightarrow> (\<forall>p. \<sigma> \<^bold>\<rhd> p \<^bold>\<succeq> \<rho> \<^bold>\<box> \<sigma> \<^bold>\<rhd> p)"
        by metis (* > 1.0 s, timed out *) }
    moreover
    { assume "\<not> \<sigma> (epred11_1 (\<^bold>\<preceq>)) (\<rho> \<^bold>\<box> \<sigma> \<^bold>\<rhd> epred12_0) \<and> \<not> SB_con ((\<^bold>\<preceq>)::('a \<Rightarrow> bool) \<Rightarrow> (_ \<Rightarrow> bool) \<Rightarrow> bool)"
      then have "nonEmpty (\<lambda>p. \<not> \<sigma> p (\<rho> \<^bold>\<box> \<sigma> \<^bold>\<rhd> epred12_0) \<and> p \<^bold>\<succeq> epred12_0)"
        by (metis SB_con_def) (* failed *)
      moreover
      { assume "\<not> \<sigma> epred12_0 (\<rho> \<^bold>\<box> \<sigma> \<^bold>\<rhd> epred12_0)"
        then have "(SI \<rho> \<and> WO \<rho> \<and> AND \<rho> \<and> OR \<rho> \<and> Bot \<rho> \<and> Top \<rho> \<and> SF \<rho> \<and> SB \<rho>) \<and> AND_con \<sigma> \<and> OR_con \<sigma> \<and> SI_con \<sigma> \<and> WO_con \<sigma> \<and> Bot_con \<sigma> \<and> Top_con \<sigma> \<and> SF_con \<sigma> \<and> SB_con \<sigma> \<longrightarrow> (\<forall>p. (\<lambda>pa. nonEmpty (\<lambda>pb. \<rho> p pb \<and> \<sigma> pb pa)) \<sqsubseteq> \<sigma> p) \<longrightarrow> (\<forall>p. \<sigma> \<^bold>\<rhd> p \<^bold>\<succeq> \<rho> \<^bold>\<box> \<sigma> \<^bold>\<rhd> p)"
          using f1 by metis (* > 1.0 s, timed out *) }
      ultimately have "(SI \<rho> \<and> WO \<rho> \<and> AND \<rho> \<and> OR \<rho> \<and> Bot \<rho> \<and> Top \<rho> \<and> SF \<rho> \<and> SB \<rho>) \<and> AND_con \<sigma> \<and> OR_con \<sigma> \<and> SI_con \<sigma> \<and> WO_con \<sigma> \<and> Bot_con \<sigma> \<and> Top_con \<sigma> \<and> SF_con \<sigma> \<and> SB_con \<sigma> \<longrightarrow> (\<forall>p. (\<lambda>pa. nonEmpty (\<lambda>pb. \<rho> p pb \<and> \<sigma> pb pa)) \<sqsubseteq> \<sigma> p) \<longrightarrow> (\<forall>p. \<sigma> \<^bold>\<rhd> p \<^bold>\<succeq> \<rho> \<^bold>\<box> \<sigma> \<^bold>\<rhd> p)"
        by (metis SI_con_def) }
    ultimately have "(SI \<rho> \<and> WO \<rho> \<and> AND \<rho> \<and> OR \<rho> \<and> Bot \<rho> \<and> Top \<rho> \<and> SF \<rho> \<and> SB \<rho>) \<and> AND_con \<sigma> \<and> OR_con \<sigma> \<and> SI_con \<sigma> \<and> WO_con \<sigma> \<and> Bot_con \<sigma> \<and> Top_con \<sigma> \<and> SF_con \<sigma> \<and> SB_con \<sigma> \<longrightarrow> (\<forall>p. (\<lambda>pa. nonEmpty (\<lambda>pb. \<rho> p pb \<and> \<sigma> pb pa)) \<sqsubseteq> \<sigma> p) \<longrightarrow> (\<forall>p. \<sigma> \<^bold>\<rhd> p \<^bold>\<succeq> \<rho> \<^bold>\<box> \<sigma> \<^bold>\<rhd> p)"
      by metis (* > 1.0 s, timed out *) }
  ultimately show "(SI \<rho> \<and> WO \<rho> \<and> AND \<rho> \<and> OR \<rho> \<and> Bot \<rho> \<and> Top \<rho> \<and> SF \<rho> \<and> SB \<rho>) \<and> AND_con \<sigma> \<and> OR_con \<sigma> \<and> SI_con \<sigma> \<and> WO_con \<sigma> \<and> Bot_con \<sigma> \<and> Top_con \<sigma> \<and> SF_con \<sigma> \<and> SB_con \<sigma> \<longrightarrow> (\<forall>p. (\<lambda>pa. nonEmpty (\<lambda>pb. \<rho> p pb \<and> \<sigma> pb pa)) \<sqsubseteq> \<sigma> p) \<longrightarrow> (\<forall>p. \<sigma> \<^bold>\<rhd> p \<^bold>\<succeq> \<rho> \<^bold>\<box> \<sigma> \<^bold>\<rhd> p)"
    by metis (* > 1.0 s, timed out *)
qed
  by (smt (verit, best) Bot_con_def Bot_def bottom_def filter_boolean_def imag_filter precon_diamond_def subordination_def subset_def supremum_def top_def upwards_closed_def)
*)

lemma thsubancon2: " (subordination \<rho> \<and> precontact \<sigma>) \<longrightarrow> ( (\<forall> a b c.  (\<rho> a b \<and> \<sigma> a c  ) \<longrightarrow> \<sigma> a (b\<^bold>\<and>c) ) \<longrightarrow> (\<forall>a. \<exists>b. ( \<rho> \<^bold>\<box> (\<sigma> \<^bold>\<rhd> \<rho> \<^bold>\<diamond> a ) \<^bold>\<preceq> \<sigma> \<^bold>\<rhd> b  ) )  ) " 
  unfolding subordination_def and precontact 
  by (metis (mono_tags, lifting) Bot_con_def precon_diamond_def subset_def sup_char top_def)
(*
proof -
  have "\<forall>p pa. p \<^bold>\<rhd> (pa::'a \<Rightarrow> bool) = \<^bold>\<Or>epred1_3 p pa"
    by (metis precon_diamond_def) (* > 1.0 s, timed out *)
  then have f1: "\<forall>p pa pb. p \<^bold>\<rhd> pa \<^bold>\<succeq> pb \<or> \<not> epred1_3 p pa pb"
    by (metis sup_char)
  { assume "nonEmpty (\<lambda>p. \<not> \<sigma> p (\<rho> \<^bold>\<box> \<sigma> \<^bold>\<rhd> \<rho> \<^bold>\<diamond> epred5_0))"
    then have "nonEmpty (\<lambda>p. epred1_3 \<sigma> p (\<rho> \<^bold>\<box> \<sigma> \<^bold>\<rhd> \<rho> \<^bold>\<diamond> epred5_0))"
      by metis (* failed *)
    then have "(SI \<rho> \<and> WO \<rho> \<and> AND \<rho> \<and> OR \<rho> \<and> Bot \<rho> \<and> Top \<rho> \<and> SF \<rho> \<and> SB \<rho>) \<and> AND_con \<sigma> \<and> OR_con \<sigma> \<and> SI_con \<sigma> \<and> WO_con \<sigma> \<and> Bot_con \<sigma> \<and> Top_con \<sigma> \<and> SF_con \<sigma> \<and> SB_con \<sigma> \<longrightarrow> (\<forall>p pa. (\<lambda>pb. \<rho> p pa \<and> \<sigma> p pb) \<sqsubseteq> (\<lambda>pb. \<sigma> p (pa \<^bold>\<and> pb))) \<longrightarrow> (\<forall>p. nonEmpty (\<lambda>pa. \<sigma> \<^bold>\<rhd> pa \<^bold>\<succeq> \<rho> \<^bold>\<box> \<sigma> \<^bold>\<rhd> \<rho> \<^bold>\<diamond> p))"
      using f1 by metis (* failed *) }
  then show "(SI \<rho> \<and> WO \<rho> \<and> AND \<rho> \<and> OR \<rho> \<and> Bot \<rho> \<and> Top \<rho> \<and> SF \<rho> \<and> SB \<rho>) \<and> AND_con \<sigma> \<and> OR_con \<sigma> \<and> SI_con \<sigma> \<and> WO_con \<sigma> \<and> Bot_con \<sigma> \<and> Top_con \<sigma> \<and> SF_con \<sigma> \<and> SB_con \<sigma> \<longrightarrow> (\<forall>p pa. (\<lambda>pb. \<rho> p pa \<and> \<sigma> p pb) \<sqsubseteq> (\<lambda>pb. \<sigma> p (pa \<^bold>\<and> pb))) \<longrightarrow> (\<forall>p. nonEmpty (\<lambda>pa. \<sigma> \<^bold>\<rhd> pa \<^bold>\<succeq> \<rho> \<^bold>\<box> \<sigma> \<^bold>\<rhd> \<rho> \<^bold>\<diamond> p))"
    by (metis SB_con_def)
qed
*)  
lemma thsubancon3: " (subordination \<rho> \<and> precontact \<sigma>) \<longrightarrow> ( (\<forall> a b c.  (\<rho> a b \<and> \<sigma> a c  ) \<longrightarrow> \<sigma> a (b\<^bold>\<and>c) ) \<longrightarrow> (\<forall>a. \<exists>b. ( (\<sigma> \<^bold>\<rhd> \<rho> \<^bold>\<diamond> a ) \<^bold>\<preceq> \<sigma> \<^bold>\<rhd> b  ) )  ) " 
  unfolding subordination_def and precontact 
  by (metis setequ_def setequ_equ)

(* Dynamic Permission *)
lemma thsubancon4: " (subordination \<rho> \<and> precontact \<sigma>) \<longrightarrow> 
( (\<forall> a b c.  (\<rho> a b \<and> \<sigma> a c  ) \<longrightarrow> \<sigma> a (b\<^bold>\<and>c) ) \<longrightarrow> (\<forall>a. \<exists>b. ( (\<rho> \<^bold>\<diamond> a ) \<^bold>\<preceq> \<sigma> \<^bold>\<rhd> b  ) )  ) " 
  unfolding subordination_def and precontact  Bot_con_def L13 L3 L5 precon_diamond_def setequ_def setequ_equ sup_char
  by (metis SB_con_def sup_char)

lemma thsubancon5: " (subordination \<rho> \<and> precontact \<sigma>) \<longrightarrow> 
( (\<forall>a. \<exists>b.\<not> ((\<rho> \<^bold>\<diamond> a ) \<^bold>\<preceq> \<sigma> \<^bold>\<rhd> b  ) ) \<longrightarrow> (\<forall> a b c.  (\<rho> a b \<and> \<sigma> a c  ) \<longrightarrow> \<sigma> a (b\<^bold>\<and>c) ) ) " 
  unfolding subordination_def and precontact  Bot_con_def L13 L3 L5 precon_diamond_def setequ_def setequ_equ sup_char
  by (metis Bot_def bottom_def inf_char slanted_diamond_def subset_def)


lemma thsubancon6: " (subordination \<rho> \<and> precontact \<sigma>) \<longrightarrow> 
( (\<forall> a b x.  (\<rho> a x \<and> \<sigma> b x  ) \<longrightarrow> \<sigma> (a\<^bold>\<or>b) x ) \<longrightarrow> (\<exists>b. \<forall>a.( \<^bold>\<midarrow> (\<sigma> \<^bold>\<rhd> b)  \<^bold>\<preceq> \<^bold>\<midarrow> (\<rho> \<^bold>\<diamond> a ) ) )  ) " 
unfolding subordination_def and precontact 
  by (metis (mono_tags, lifting) BA_cp Bot_con_def precon_diamond_def subset_def supremum_def top_def)

lemma thsubancon7: " (subordination \<rho> \<and> precontact \<sigma>) \<longrightarrow> 
( (\<exists>b. \<forall>a.( \<^bold>\<midarrow> (\<sigma> \<^bold>\<rhd> b)  \<^bold>\<preceq> \<^bold>\<midarrow> (\<rho> \<^bold>\<diamond> a ) ) )  \<longrightarrow>  (\<forall> a b x.  (\<rho> a x \<and> \<sigma> b x  ) \<longrightarrow> \<sigma> (a\<^bold>\<or>b) x ) ) " 
unfolding subordination_def and precontact 
  by (metis (no_types, lifting) SI_con_def join_def subset_def)

lemma thsubancon8: " (subordination \<rho> \<and> precontact \<sigma>) \<longrightarrow> 
( (\<forall> a x y.  (\<rho> a x \<and> \<sigma> (a\<^bold>\<and>x) y ) \<longrightarrow> \<sigma> a (x\<^bold>\<and>y) ) \<longrightarrow> (   \<exists>b.  \<forall>a. (\<sigma> \<^bold>\<rhd> a)  \<^bold>\<preceq> (\<rho> \<^bold>\<box> (\<sigma> \<^bold>\<rhd> b) ) )  ) " 
  unfolding subordination_def and precontact SB_con_def SF_def WO_def le31it1b precon_diamond_def subset_def sup_char top_def 
  slanted_box_def subset_def sup_char  
  by (metis (mono_tags, lifting) Bot_con_def subset_def sup_char top_def)

lemma thsubancon9: " (subordination \<rho> \<and> precontact \<sigma>) \<longrightarrow> 
(  (       \<forall>b. \<exists>a. \<not> ( (\<sigma> \<^bold>\<rhd> a)  \<^bold>\<preceq>  (\<rho> \<^bold>\<box> (\<sigma> \<^bold>\<rhd> b)) ) )  )\<longrightarrow>  (\<forall> a x y.  (\<rho> a x \<and> \<sigma> (a\<^bold>\<and>x) y ) \<longrightarrow> \<sigma> a (x\<^bold>\<and>y) ) " 
  unfolding subordination_def and precontact SB_con_def SF_def WO_def le31it1b precon_diamond_def subset_def sup_char top_def 
  slanted_box_def subset_def sup_char 
  by (metis L10 L13 setequ_equ sup_char top_def)

(*static permission*)
lemma thsubancon10: " (subordination \<rho> \<and> precontact \<sigma>) \<longrightarrow> 
( (\<forall> a b x.  (\<rho> a x \<and>  \<sigma> (a\<^bold>\<or>b)(\<^bold>\<midarrow>x) ) \<longrightarrow> \<sigma> b(\<^bold>\<midarrow>x) ) \<longrightarrow> (\<exists>b. \<forall>a.( \<^bold>\<midarrow> (\<sigma> \<^bold>\<rhd> b)  \<^bold>\<preceq> \<^bold>\<midarrow> (\<rho> \<^bold>\<diamond> a ) ) )  ) " 
unfolding subordination_def and precontact 
  by (metis (mono_tags, lifting) BA_cp Bot_con_def precon_diamond_def subset_def supremum_def top_def)

lemma thsubancon11: " (subordination \<rho> \<and> precontact \<sigma>) \<longrightarrow> 
(  (\<forall>b. \<exists>a.\<not> ( \<^bold>\<midarrow> (\<sigma> \<^bold>\<rhd> b)  \<^bold>\<preceq> \<^bold>\<midarrow> (\<rho> \<^bold>\<diamond> a ) ) ) \<longrightarrow>    (\<forall> a b x.  (\<rho> a x \<and>  \<sigma> (a\<^bold>\<or>b)(\<^bold>\<midarrow>x) ) \<longrightarrow> \<sigma> b(\<^bold>\<midarrow>x) )  ) " 
unfolding subordination_def and precontact   
  by (metis (mono_tags, lifting) BA_cp Bot_con_def precon_diamond_def subset_def supremum_def top_def) 

lemma thsubancon12: " (subordination \<rho> \<and> precontact \<sigma>) \<longrightarrow> 
( (\<forall> a b c.  (\<rho> a b \<and>  \<sigma> a (\<^bold>\<midarrow>(b\<^bold>\<and>c)) ) \<longrightarrow> \<sigma> a (\<^bold>\<midarrow>c) ) \<longrightarrow> (\<forall>a. \<exists>b. ( (\<rho> \<^bold>\<diamond> a ) \<^bold>\<preceq> \<sigma> \<^bold>\<rhd> b  ) )  ) " 
unfolding subordination_def and precontact SB_con_def precon_diamond_def sup_char   
  by (metis sup_char)

lemma thsubancon13: " (subordination \<rho> \<and> precontact \<sigma>) \<longrightarrow> 
( (\<forall>a. \<exists>b.\<not> ( (\<rho> \<^bold>\<diamond> a ) \<^bold>\<preceq> \<sigma> \<^bold>\<rhd> b  ) )  ) \<longrightarrow> (\<forall> a b c.  (\<rho> a b \<and>  \<sigma> a (\<^bold>\<midarrow>(b\<^bold>\<and>c)) ) \<longrightarrow> \<sigma> a (\<^bold>\<midarrow>c) ) " 
unfolding subordination_def and precontact   subset_def infimum_def slanted_diamond_def  
  by (metis Bot_def bottom_def)
 
lemma thsubancon14: " (subordination \<rho> \<and> precontact \<sigma>) \<longrightarrow> 
( (\<forall> a x y.  (\<rho> a x \<and> \<sigma> a(\<^bold>\<midarrow>(x\<^bold>\<and>y)) ) \<longrightarrow>  \<sigma> (a\<^bold>\<and>x)(\<^bold>\<midarrow>y) ) \<longrightarrow> (   \<exists>b.  \<forall>a. (\<sigma> \<^bold>\<rhd> a)  \<^bold>\<preceq> (\<rho> \<^bold>\<box> (\<sigma> \<^bold>\<rhd> b) ) )  ) "  
unfolding subordination_def and precontact 
  by (metis precontact subordination_def thsubancon8 thsubancon9)   

lemma thsubancon15: " (subordination \<rho> \<and> precontact \<sigma>) \<longrightarrow> 
(  (\<forall>b.  \<exists>a.\<not> ((\<sigma> \<^bold>\<rhd> a)  \<^bold>\<preceq> (\<rho> \<^bold>\<box> (\<sigma> \<^bold>\<rhd> b)) ) )  ) \<longrightarrow> (\<forall> a x y.  (\<rho> a x \<and> \<sigma> a(\<^bold>\<midarrow>(x\<^bold>\<and>y)) ) \<longrightarrow>  \<sigma> (a\<^bold>\<and>x)(\<^bold>\<midarrow>y) ) "  
unfolding subordination_def and precontact 
  by (metis precontact subordination_def thsubancon8 thsubancon9)
(* bi-subordination *)
lemma thsubancon16: " (subordination \<rho> \<and> subordination \<sigma>) \<longrightarrow> 
  (\<forall> b. ((\<forall> a. (\<rho> a b)) \<longrightarrow> (\<forall>a. (\<sigma> a b)) )) \<longrightarrow>   ((\<sigma> \<^bold>\<diamond> \<^bold>\<top>)  \<^bold>\<preceq> (\<rho> \<^bold>\<diamond>\<^bold>\<top>) )   "  
  unfolding subordination_def  SI_def inf_char subset_def top_def
  by (smt (z3) inf_char slanted_diamond_def subset_def)

lemma thsubancon17: " (subordination \<rho> \<and> precontact \<sigma>) \<longrightarrow> 
  (\<forall> a. ((\<forall> b. (\<rho> a b)) \<longrightarrow> (\<forall>b. (\<not> \<sigma> b a)) )) \<longrightarrow>   ((\<rho> \<^bold>\<box> \<^bold>\<bottom>)  \<^bold>\<preceq> (\<sigma> \<^bold>\<rhd>\<^bold>\<top>) )   " 
 unfolding subordination_def slanted_box_def precon_diamond_def  
  by (metis (mono_tags, lifting) WO_def bottom_def subset_def sup_char)

lemma thsubancon18: " (precontact \<rho> \<and> precontact \<sigma>) \<longrightarrow> 
  (\<forall> a.\<forall> b. (\<rho> a b  \<longrightarrow>   \<sigma> a b)) \<longrightarrow>   ((\<sigma> \<^bold>\<rhd> a)  \<^bold>\<preceq> (\<rho> \<^bold>\<rhd> a ) )   " 
unfolding precontact precon_diamond_def  
  by (metis sup_char)

lemma thsubancon19: " (subordination \<rho> \<and> subordination \<sigma>) \<longrightarrow> 
  (\<forall> a. (\<forall> b. ( (\<rho> a b) \<longrightarrow>  ( \<sigma> a b))  \<longrightarrow>   (b \<^bold>\<preceq> \<^bold>\<top>)\<and> (\<^bold>\<top> \<^bold>\<preceq> b)) \<longrightarrow>  ( \<^bold>\<top>  \<^bold>\<preceq> (\<sigma> \<^bold>\<diamond> a)\<^bold>\<or>(\<rho> \<^bold>\<diamond> a)))  " 
  unfolding subordination_def 
  by (metis L3 antisymmetric_def inf_char slanted_diamond_def subset_antisymmetric)

lemma thsubancon20: " (precontact \<rho> \<and> precontact \<sigma>) \<longrightarrow> 
  (\<forall> a. (\<forall> b. ( (\<not> \<rho> a b) \<and>  (\<not> \<sigma> a b))  \<longrightarrow>   (b \<^bold>\<preceq> \<^bold>\<bottom>)) \<longrightarrow>  ( (\<sigma> \<^bold>\<rhd> a)\<^bold>\<and>(\<rho> \<^bold>\<rhd> a))  \<^bold>\<preceq> \<^bold>\<bottom> )  " 
  unfolding precontact  subset_def meet_def and  precon_diamond_def oops

lemma thsubancon21: " (subordination \<rho> \<and> precontact \<sigma>) \<longrightarrow> 
  (\<forall> a. \<forall>c. (\<forall> b. ( (\<rho> b c) \<longrightarrow>  (\<not> \<sigma> a b))) \<longrightarrow>  ((\<rho> \<^bold>\<box> c)   \<^bold>\<preceq> (\<sigma> \<^bold>\<rhd> a)))  " 
  unfolding subordination_def and precontact 
  by (simp add: precon_diamond_def slanted_box_def sup_char)

lemma thsubancon22: " (subordination \<rho> \<and> precontact \<sigma>) \<longrightarrow> 
  (\<forall> a. (\<exists> b. ( (\<rho> a b) \<and>  (\<not> \<sigma> a b))) \<longrightarrow>  ((\<rho> \<^bold>\<diamond> a) \<^bold>\<preceq> (\<sigma> \<^bold>\<rhd> a)))  " 
  unfolding subordination_def and precontact  
  by (smt (verit) le31it1a precon_diamond_def subset_def supremum_def)

lemma thsubancon23: " (subordination \<rho> \<and> subordination \<sigma>) \<longrightarrow> 
  ( (\<forall> a. (\<exists> b. ((\<rho> a b) \<and> (\<sigma> b \<^bold>\<bottom>)) \<longrightarrow> (a \<^bold>\<preceq> \<^bold>\<bottom>)) ) \<longrightarrow>  ((\<rho> \<^bold>\<box> (\<sigma> \<^bold>\<box> \<^bold>\<bottom>)) \<^bold>\<preceq> \<^bold>\<bottom>) )" 
  unfolding subordination_def oops

lemma thsubancon24: " (subordination \<rho> \<and> precontact \<sigma>) \<longrightarrow> 
  ( (\<forall> a. (\<exists> b. ((\<rho> a b) \<and> (\<not> \<sigma> b \<^bold>\<bottom>)) \<longrightarrow> (a \<^bold>\<preceq> \<^bold>\<bottom>)) ) \<longrightarrow>  ((\<rho> \<^bold>\<box> (\<sigma> \<^bold>\<unrhd> \<^bold>\<top> )) \<^bold>\<preceq> \<^bold>\<bottom>) )" 
  unfolding subordination_def oops

(*  using L14  C11_def L13 SI_in_def bottom_def compl_def meet_def setequ_equ subset_def BA_deMorgan1 BA_deMorgan2 BA_dn L9 *)

lemma sublecon: "( subordination \<rho> \<and> contact \<sigma> \<and>  CS1 \<rho> \<sigma> \<and>  CS2 \<rho> \<sigma>) \<longrightarrow> (\<forall> a x.  \<not>(\<sigma> a(\<^bold>\<midarrow>x)) \<longrightarrow> ( \<rho> a x)) " 
unfolding CS1_def subordination_def   using  SI_def Top_def WO_def compl_def setequ_equ subset_def top_def meet_def BA_deMorgan2 oops
  

definition AND_st::"('w \<sigma>,'w \<sigma>)\<rho> \<Rightarrow> ('w \<sigma>,'w \<sigma>)\<rho> \<Rightarrow> bool" 
  where \<open>AND_st \<rho> \<sigma> \<equiv>(subordination \<rho>)\<and> (\<forall>a  x y. ((\<rho> a x)  \<and> (\<sigma> a y) ) \<longrightarrow> (\<sigma> a (x\<^bold>\<and>y)))\<close> 
definition OR_st::"('w \<sigma>,'w \<sigma>)\<rho> \<Rightarrow> ('w \<sigma>,'w \<sigma>)\<rho> \<Rightarrow> bool" 
  where \<open>OR_st \<rho> \<sigma> \<equiv> (subordination \<rho>) \<and> (\<forall>a b x. \<rho> a x \<and> (\<sigma> b x) \<longrightarrow> (\<sigma> (a\<^bold>\<or>b) x))\<close> 
definition Ctop::"('w \<sigma>,'w \<sigma>)\<rho> \<Rightarrow> bool" where \<open>Ctop \<rho> \<equiv> (\<rho> \<^bold>\<top> \<^bold>\<top>)\<close>
definition Cbot::"('w \<sigma>,'w \<sigma>)\<rho> \<Rightarrow> bool" where \<open>Cbot \<rho> \<equiv> (\<rho> \<^bold>\<bottom> \<^bold>\<bottom>)\<close>   



definition permission_st::"('w \<sigma>,'w \<sigma>)\<rho> \<Rightarrow> ('w \<sigma>,'w \<sigma>)\<rho> \<Rightarrow> bool" 
  where "permission_st \<rho> \<sigma> \<equiv> subordination \<rho> \<and> (\<forall> a x. \<rho> a x \<longrightarrow> \<sigma> a x)\<and> Ctop \<sigma> \<and> Cbot \<sigma> \<and> SI \<sigma> \<and> WO \<sigma> \<and> AND_st \<rho> \<sigma> \<and> OR_st \<rho> \<sigma> "

definition permission_dy::"('w \<sigma>,'w \<sigma>)\<rho> \<Rightarrow> ('w \<sigma>,'w \<sigma>)\<rho> \<Rightarrow> bool" 
  where "permission_dy \<rho> \<sigma>  \<equiv> subordination \<rho> \<and> C11 \<sigma> \<and> C12 \<sigma> \<and> SI_in \<sigma> \<and> WO_in \<sigma> \<and> OR_in \<rho> \<sigma> \<and> AND_in \<rho> \<sigma> "



definition subrelation::"('w \<sigma>,'w \<sigma>)\<rho> \<Rightarrow> ('w \<sigma>,'w \<sigma>)\<rho> \<Rightarrow> bool" 
  where "subrelation \<rho> \<sigma> \<equiv>   \<forall> a x. \<rho> a x \<longrightarrow> \<sigma> a x"

definition sub_closure::"('w \<sigma>,'w \<sigma>)\<rho> \<Rightarrow> ('w \<sigma>,'w \<sigma>)\<rho>" 
  where "sub_closure \<rho>  \<equiv>  \<lambda>x y. \<forall>\<sigma>. subordination \<sigma> \<longrightarrow> (subrelation \<rho> \<sigma> \<longrightarrow> \<sigma> x y)"

definition con_closure::"('w \<sigma>,'w \<sigma>)\<rho> \<Rightarrow> ('w \<sigma>,'w \<sigma>)\<rho>" 
  where "con_closure \<rho>  \<equiv>  \<lambda>x y. \<forall>\<sigma>. contact \<sigma> \<longrightarrow> (subrelation \<rho> \<sigma> \<longrightarrow> \<sigma> x y)"


(*
definition sub_closure::"('w \<sigma>,'w \<sigma>)\<rho> \<Rightarrow> ('w \<sigma>,'w \<sigma>)\<rho>" 
  where "sub_closure \<rho>  \<equiv> \<exists> \<sigma>. subordination \<sigma>  \<and> (\<forall> a x. \<rho> a x \<longrightarrow> \<sigma> a x)\<and> 
(\<forall>\<tau>. subordination \<tau> \<and> (\<forall> a x. \<rho> a x \<longrightarrow> \<tau> a x) \<longrightarrow> \<sigma> \<sqsubseteq> \<tau>) "
*)

(*  by (metis BA_dn L14 L9 join_def setequ_equ top_def) *)
  
  
  
(*  by (metis BA_deMorgan2 L13 SI_def Top_def WO_def compl_def meet_def subset_def) *)
   

  



(* unfolding CS1_def CS2_def  contact_def  by (metis C11_def L13 SI_in_def bottom_def compl_def meet_def setequ_char setequ_equ subset_def) *)   



(*CS1_def CS2_def C11_def C12_def C2_def C2'_def SI_def WO_def AND_def OR_def Bot_def Top_def *)

end